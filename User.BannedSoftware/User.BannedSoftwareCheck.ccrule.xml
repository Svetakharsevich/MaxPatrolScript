<rules>
    <![CDATA[

data_requirement_rule User.BannedSoftwareCheck (
    @Entity=OperatingSystem.Windows.WindowsHost,
    @DisplayName=@Entity.Hostname
)

// ПАРАМЕТРЫ УБРАНЫ - никаких списков!

computability {
    return @Entity.Softs.Any();
}

check DetectBannedSoftware()
{
    assert (
        @BannedSoftwareCount == 0
    )

    checkData
    {
        // Удаляем дубликаты ПО по имени и версии
        var @uniqueSofts = @Entity.Softs
            .GroupBy(@soft => new { 
                Name = @soft.Name?.ToLower(), 
                Version = @soft.Version?.ToLower() 
            })
            .Select(@group => @group.First());
        
        // ПОВЕДЕНЧЕСКИЙ АНАЛИЗ БЕЗ СПИСКОВ!
        var @bannedSoftware = @uniqueSofts.Where(@soft => 
            // Торрент-клиенты
            @soft.Name.Contains("torrent", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("utorrent", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("bittorrent", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("p2p", StringComparison.OrdinalIgnoreCase) ||
            
            // Удаленный доступ
            @soft.Name.Contains("teamviewer", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("anydesk", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("remote", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("rdp", StringComparison.OrdinalIgnoreCase) ||
            
            // Нежелательное ПО
            @soft.Name.Contains("crack", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("keygen", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("hack", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("loader", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("patch", StringComparison.OrdinalIgnoreCase) ||
            
            // Запрещенные издатели
            @soft.Vendor.Contains("Mail.Ru", StringComparison.OrdinalIgnoreCase) ||
            @soft.Vendor.Contains("Yandex", StringComparison.OrdinalIgnoreCase) ||
            @soft.Vendor.Contains("Amigo", StringComparison.OrdinalIgnoreCase) ||
            @soft.Vendor.Contains("Pirate", StringComparison.OrdinalIgnoreCase) ||
            
            // Мессенджеры и другое ПО
            @soft.Name.Contains("telegram", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("skype", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("zoom", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("aimp", StringComparison.OrdinalIgnoreCase) ||
            @soft.Name.Contains("vlc", StringComparison.OrdinalIgnoreCase)
        );

        var @bannedDetails = @bannedSoftware.Select(@soft => dynamic{
            SoftwareName = @soft.Name,
            SoftwareVersion = @soft.Version,
            SoftwareVendor = @soft.Vendor,
            InstallPath = @soft.InstallPath,
            BannedSoftwareCount = @bannedSoftware.Count()
        });

        filterByParameters(@bannedDetails);
        
        if (@bannedSoftware.Any())
            return FAIL_NON_COMPLIANT;

        return SUCCESS;
    }

    howToFix (FAIL_NON_COMPLIANT)
    {
        var @bannedList = @ComplianceCheckContext.NonCompliantRows
            .Select(@row => @row.SoftwareName)
            .Distinct()
            .ToArray();

        addHowToFix("Обнаружено запрещенное ПО: " + string.Join(", ", @bannedList));
        addHowToFix("Удалите через: Панель управления -> Программы и компоненты -> Удаление");
        addHowToFix("Или выполните команду PowerShell: Get-WmiObject -Class Win32_Product | Where-Object {$_.Name -like '*Telegram*'} | ForEach-Object {$_.Uninstall()}");
    }
}

]]>
</rules>